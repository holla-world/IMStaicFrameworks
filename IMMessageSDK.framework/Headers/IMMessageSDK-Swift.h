#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.5 (swiftlang-1300.0.31.1 clang-1300.0.29.1)
#ifndef IMMESSAGESDK_SWIFT_H
#define IMMESSAGESDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import RealmSwift;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="IMMessageSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class IMUser;
@class IMConversation;

SWIFT_CLASS("_TtC12IMMessageSDK36CreationConversationNotificationData")
@interface CreationConversationNotificationData : NSObject
- (nonnull instancetype)initWithUser:(IMUser * _Nonnull)user conversation:(IMConversation * _Nonnull)conversation OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class NSNumber;
enum IMCommandType : NSInteger;
@class NSString;

SWIFT_CLASS("_TtC12IMMessageSDK9IMCommand")
@interface IMCommand : RealmSwiftObject
@property (nonatomic) NSInteger id;
@property (nonatomic) enum IMCommandType commandType;
@property (nonatomic, copy) NSString * _Nullable content;
@property (nonatomic) NSInteger type;
+ (IMCommand * _Nonnull)createProjectCustomizedCommandWithContent:(NSString * _Null_unspecified)content SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, IMCommandType, closed) {
  IMCommandTypeUnknownCommand = 0,
  IMCommandTypeConversationCreation = 1,
  IMCommandTypeProjectCustomized = 2,
  IMCommandTypePrivateMessageAck = 3,
  IMCommandTypeUserOnlineStatus = 4,
};

enum IMConversationType : NSInteger;

SWIFT_CLASS("_TtC12IMMessageSDK14IMConversation")
@interface IMConversation : RealmSwiftObject
@property (nonatomic) NSInteger id;
@property (nonatomic) enum IMConversationType conversationType;
@property (nonatomic, copy) NSString * _Nullable conversationId;
@property (nonatomic, copy) NSString * _Nullable currentUid;
@property (nonatomic, copy) NSString * _Nullable targetUid;
@property (nonatomic) NSInteger type;
@property (nonatomic) int64_t lastReadAt;
@property (nonatomic, copy) NSString * _Nullable latestMessageId;
@property (nonatomic) NSInteger unread;
@property (nonatomic) int64_t createdAt;
@property (nonatomic) int64_t updatedAt;
@property (nonatomic) int64_t lastSyncAt;
@property (nonatomic, copy) NSString * _Nullable latestMessage;
+ (NSString * _Nullable)primaryKey SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)indexedProperties SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithPrivateConversation:(IMUser * _Null_unspecified)user recipientUid:(NSString * _Null_unspecified)recipientUid;
- (nonnull instancetype)initWithGroupConversation:(IMUser * _Null_unspecified)user conversationId:(NSString * _Null_unspecified)conversationId;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, IMConversationType, closed) {
  IMConversationTypeUnknownConversation = 0,
  IMConversationTypePrivateConversation = 1,
  IMConversationTypeGroupConversation = 2,
};

enum IMMessageType : NSInteger;

SWIFT_CLASS("_TtC12IMMessageSDK9IMMessage")
@interface IMMessage : RealmSwiftObject
@property (nonatomic) NSInteger id;
@property (nonatomic) enum IMMessageType messageType;
@property (nonatomic, copy) NSString * _Nullable messageId;
@property (nonatomic) NSInteger localConversationId;
@property (nonatomic, copy) NSString * _Nullable conversationId;
@property (nonatomic, copy) NSString * _Nullable senderUid;
@property (nonatomic, copy) NSString * _Nullable content;
@property (nonatomic, copy) NSString * _Nullable extras;
@property (nonatomic, copy) NSString * _Nullable currentUid;
@property (nonatomic) int64_t createdAt;
@property (nonatomic) NSInteger type;
@property (nonatomic) BOOL isLocal;
+ (NSString * _Nullable)primaryKey SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)indexedProperties SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)ignoredProperties SWIFT_WARN_UNUSED_RESULT;
+ (IMMessage * _Nonnull)createTextMessageWithContent:(NSString * _Null_unspecified)content extras:(NSString * _Nullable)extras SWIFT_WARN_UNUSED_RESULT;
+ (IMMessage * _Nonnull)createNotificationMessageWithContent:(NSString * _Nullable)content extras:(NSString * _Null_unspecified)extras SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, IMMessageType, closed) {
  IMMessageTypeUnknownMessage = 0,
  IMMessageTypeTextMessage = 1,
  IMMessageTypeNotificationMessage = 2,
  IMMessageTypeSystemMessage = 3,
};


SWIFT_CLASS("_TtC12IMMessageSDK10IMMessager")
@interface IMMessager : NSObject
@property (nonatomic, readonly) BOOL isLogin;
- (nonnull instancetype)initWithEndpoint:(NSString * _Nonnull)endpoint OBJC_DESIGNATED_INITIALIZER;
- (BOOL)loginWithUid:(NSString * _Nonnull)uid accessToken:(NSString * _Nonnull)accessToken autoSync:(BOOL)autoSync error:(NSError * _Nullable * _Nullable)error;
- (void)logout;
- (void)ensureConnected:(void (^ _Nullable)(void))callback;
- (void)getCurrentUserWithCallback:(void (^ _Nonnull)(IMUser * _Nullable, NSError * _Nullable))callback;
- (void)enableDebug;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol InvalidRealmCallback;
@protocol InvalidAccessTokenCallback;
@protocol ReceivedCommandCallback;
@protocol ReceivedMessageCallback;
@protocol UpdatedConversationCallback;
@protocol MessageSyncCallback;
@protocol SocketStatusCallback;

@interface IMMessager (SWIFT_EXTENSION(IMMessageSDK))
- (void)registerInvalidRealmCallback:(id <InvalidRealmCallback> _Nonnull)callback;
- (void)unregisterInvalidRealmCallback:(id <InvalidRealmCallback> _Nonnull)callback;
- (void)registerInvalidAccessTokenCallback:(id <InvalidAccessTokenCallback> _Nonnull)callback;
- (void)unregisterInvalidAccessTokenCallback:(id <InvalidAccessTokenCallback> _Nonnull)callback;
- (void)registerCommandReceivedCallback:(id <ReceivedCommandCallback> _Nonnull)callback;
- (void)unregisterCommandReceivedCallback:(id <ReceivedCommandCallback> _Nonnull)callback;
- (void)registerMessageReceivedCallback:(id <ReceivedMessageCallback> _Nonnull)callback;
- (void)unregisterMessageReceivedCallback:(id <ReceivedMessageCallback> _Nonnull)callback;
- (void)registerConversationUpdatedCallback:(id <UpdatedConversationCallback> _Nonnull)callback;
- (void)unregisterConversationUpdatedCallback:(id <UpdatedConversationCallback> _Nonnull)callback;
- (void)registerMessageSyncedSuccessCallback:(id <MessageSyncCallback> _Nonnull)callback;
- (void)unregisterMessageSyncedSuccessCallback:(id <MessageSyncCallback> _Nonnull)callback;
- (void)registerSocketStatusCallback:(id <SocketStatusCallback> _Nonnull)callback;
- (void)unregisterSocketStatusCallback:(id <SocketStatusCallback> _Nonnull)callback;
@end


@interface IMMessager (SWIFT_EXTENSION(IMMessageSDK))
- (void)sendPrivateMessageWithRecipientUid:(NSString * _Nonnull)recipientUid body:(NSString * _Nonnull)body extras:(NSString * _Nullable)extras callback:(void (^ _Nonnull)(IMMessage * _Nullable, NSError * _Nullable))callback;
- (void)sendPrivateMessageWithRecipientUid:(NSString * _Nonnull)recipientUid message:(IMMessage * _Nonnull)message callback:(void (^ _Nonnull)(IMMessage * _Nullable, NSError * _Nullable))callback;
- (void)sendCommandMessageWithRecipientUid:(NSString * _Nonnull)recipientUid body:(NSString * _Nonnull)body callback:(void (^ _Nonnull)(IMCommand * _Nullable, NSError * _Nullable))callback;
- (void)sendCommandMessageWithRecipientUids:(NSArray<NSString *> * _Nonnull)recipientUids body:(NSString * _Nonnull)body callback:(void (^ _Nonnull)(IMCommand * _Nullable, NSError * _Nullable))callback;
- (void)fetchMessagesWithConversationId:(NSString * _Nonnull)conversationId from:(int64_t)end limit:(NSInteger)count callback:(void (^ _Nonnull)(NSArray<IMMessage *> * _Nonnull, NSError * _Nullable))callback;
/// 通过 local conversation id 从服务器 获取IMMessage
/// \param localConversationId local id
///
/// \param end 从当前时间向更早的时间获取
///
/// \param count 获取的数量
///
/// \param callback IMMessage and error
///
- (void)fetchMessagesWithLocalConversationId:(NSInteger)localConversationId from:(int64_t)end limit:(NSInteger)count callback:(void (^ _Nonnull)(NSArray<IMMessage *> * _Nonnull, NSError * _Nullable))callback;
/// 通过IMConversation 从服务器获取 IMMessage
/// \param conversation IMConversation
///
/// \param end 从当前时间向更早的时间获取
///
/// \param count 获取的数量
///
/// \param callback IMMessage and error
///
- (void)fetchMessagesWithConversation:(IMConversation * _Nonnull)conversation from:(int64_t)end limit:(NSInteger)count callback:(void (^ _Nonnull)(NSArray<IMMessage *> * _Nonnull, NSError * _Nullable))callback;
- (void)getMessagesWithConversationId:(NSString * _Nonnull)conversationId from:(int64_t)from count:(NSInteger)count fill:(BOOL)fill callback:(void (^ _Nonnull)(NSArray<IMMessage *> * _Nonnull, NSError * _Nullable))callback;
/// 通过local conversation id 获取对应IMConversation的IMMessages
/// \param localConversationId localConversationId
///
/// \param from 
///
/// \param count 从当前时间向更早的时间获取
///
/// \param fill //
///
/// \param callback IMMessages and error
///
- (void)getMessagesWithLocalConversationId:(NSInteger)localConversationId from:(int64_t)from count:(NSInteger)count fill:(BOOL)fill callback:(void (^ _Nonnull)(NSArray<IMMessage *> * _Nonnull, NSError * _Nullable))callback;
- (BOOL)getMessageWithMessageId:(NSString * _Nonnull)messageId error:(NSError * _Nullable * _Nullable)error callback:(void (^ _Nonnull)(IMMessage * _Nullable, NSError * _Nullable))callback;
- (void)getMessagesWithMessageIds:(NSArray<NSString *> * _Nonnull)messageIds callback:(void (^ _Nonnull)(NSDictionary<NSString *, IMMessage *> * _Nonnull, NSError * _Nullable))callback;
- (void)getLatestMessageWithLocalConversationId:(NSInteger)localConversationId callback:(void (^ _Nonnull)(IMMessage * _Nullable, NSError * _Nullable))callback;
- (void)getLatestMessagesWithLocalConversationIds:(NSArray<NSNumber *> * _Nonnull)localConversationIds callback:(void (^ _Nonnull)(NSArray<IMMessage *> * _Nonnull, NSError * _Nullable))callback;
- (void)getLatestMessageWithConversationId:(NSString * _Nonnull)conversationId callback:(void (^ _Nonnull)(IMMessage * _Nullable, NSError * _Nullable))callback;
- (void)getLatestMessagesWithConversationIds:(NSArray<NSString *> * _Nonnull)conversationIds callback:(void (^ _Nonnull)(NSArray<IMMessage *> * _Nonnull, NSError * _Nullable))callback;
- (void)fetchConversationIfunavailableWithConversationIds:(NSArray<NSString *> * _Nonnull)conversationIds callback:(void (^ _Nonnull)(NSArray<IMConversation *> * _Nonnull, NSError * _Nullable))callback;
- (void)getConversationWithLocalConversationId:(NSInteger)localConversationId callback:(void (^ _Nonnull)(IMConversation * _Nullable, NSError * _Nullable))callback;
- (void)getConversationsWithLocalConversationIds:(NSArray<NSNumber *> * _Nonnull)localConversationIds callback:(void (^ _Nonnull)(NSArray<IMConversation *> * _Nonnull, NSError * _Nullable))callback;
- (void)getPrivateConversationWithTargetUid:(NSString * _Nonnull)targetUid callback:(void (^ _Nonnull)(IMConversation * _Nullable, NSError * _Nullable))callback;
- (void)getPrivateConversationsWithTargetUids:(NSArray<NSString *> * _Nonnull)targetUids callback:(void (^ _Nonnull)(NSDictionary<NSString *, IMConversation *> * _Nonnull, NSError * _Nullable))callback;
- (void)getConversationWithConversationId:(NSString * _Nonnull)conversationId callback:(void (^ _Nonnull)(IMConversation * _Nullable, NSError * _Nullable))callback;
- (void)getConversationsWithConversationIds:(NSArray<NSString *> * _Nonnull)conversationIds callback:(void (^ _Nonnull)(NSDictionary<NSString *, IMConversation *> * _Nonnull, NSError * _Nullable))callback;
- (void)getConversationsFrom:(int64_t)from count:(NSInteger)count callback:(void (^ _Nonnull)(NSArray<IMConversation *> * _Nonnull, NSError * _Nullable))callback;
- (void)getTotalUnreadCountWithCallback:(void (^ _Nonnull)(NSInteger, NSError * _Nullable))callback;
- (void)clearConversationUnreadsWithLocalConversationId:(NSInteger)localConversationId callback:(void (^ _Nullable)(BOOL))callback;
- (void)subscribeOnlineWith:(NSArray<NSString *> * _Nullable)userIds callback:(void (^ _Nullable)(BOOL, NSString * _Nullable))callback;
- (void)unsubscribeOnlineWith:(NSArray<NSString *> * _Nullable)userIds callback:(void (^ _Nullable)(BOOL, NSString * _Nullable))callback;
@end

typedef SWIFT_ENUM(NSInteger, IMPendingMessageType, closed) {
  IMPendingMessageTypeUnknownMessage = 0,
  IMPendingMessageTypePrivateMessage = 1,
  IMPendingMessageTypeCommandMessage = 2,
  IMPendingMessageTypeGroupMessage = 3,
};


SWIFT_CLASS("_TtC12IMMessageSDK6IMUser")
@interface IMUser : RealmSwiftObject
@property (nonatomic) NSInteger id;
@property (nonatomic, copy) NSString * _Nullable uid;
@property (nonatomic, copy) NSString * _Nullable accessToken;
@property (nonatomic) int64_t lastSyncAt;
+ (NSString * _Nullable)primaryKey SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)indexedProperties SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP12IMMessageSDK26InvalidAccessTokenCallback_")
@protocol InvalidAccessTokenCallback
- (void)onInvalidAccessToken;
@end


SWIFT_CLASS("_TtC12IMMessageSDK34InvalidAccessTokenNotificationData")
@interface InvalidAccessTokenNotificationData : NSObject
- (nonnull instancetype)initWithToken:(NSString * _Nonnull)token OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP12IMMessageSDK20InvalidRealmCallback_")
@protocol InvalidRealmCallback
- (void)onInvalidRealm:(NSError * _Nonnull)error;
@end


SWIFT_PROTOCOL("_TtP12IMMessageSDK19MessageSyncCallback_")
@protocol MessageSyncCallback
- (void)onSyncSuccess:(int64_t)lastSyncAt;
@end


@interface RealmSwiftObject (SWIFT_EXTENSION(IMMessageSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSString *> * _Nonnull detachableProperties;)
+ (NSArray<NSString *> * _Nonnull)detachableProperties SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSString *> * _Nonnull undetachableProperties;)
+ (NSArray<NSString *> * _Nonnull)undetachableProperties SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP12IMMessageSDK23ReceivedCommandCallback_")
@protocol ReceivedCommandCallback
- (void)onReceived:(IMCommand * _Nonnull)command;
@end


SWIFT_CLASS("_TtC12IMMessageSDK31ReceivedCommandNotificationData")
@interface ReceivedCommandNotificationData : NSObject
- (nonnull instancetype)initWithCommand:(IMCommand * _Nonnull)command OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP12IMMessageSDK23ReceivedMessageCallback_")
@protocol ReceivedMessageCallback
- (void)onReceived:(NSInteger)localConversationId :(NSArray<IMMessage *> * _Nonnull)messages;
@end


SWIFT_CLASS("_TtC12IMMessageSDK31ReceivedMessageNotificationData")
@interface ReceivedMessageNotificationData : NSObject
- (nonnull instancetype)initWithLocalConversationId:(NSInteger)localConversationId messages:(NSArray<IMMessage *> * _Nonnull)messages OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP12IMMessageSDK20SocketStatusCallback_")
@protocol SocketStatusCallback
- (void)onAvailable;
- (void)onUnAvailable;
- (void)onOpened;
- (void)onClosed;
@end


SWIFT_PROTOCOL("_TtP12IMMessageSDK27UpdatedConversationCallback_")
@protocol UpdatedConversationCallback
- (void)onUpdated:(NSArray<IMConversation *> * _Nonnull)conversations;
@end


SWIFT_CLASS("_TtC12IMMessageSDK35UpdatedConversationNotificationData")
@interface UpdatedConversationNotificationData : NSObject
- (nonnull instancetype)initWithConversations:(NSArray<IMConversation *> * _Nonnull)conversations OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.5 (swiftlang-1300.0.31.1 clang-1300.0.29.1)
#ifndef IMMESSAGESDK_SWIFT_H
#define IMMESSAGESDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
@import RealmSwift;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="IMMessageSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class IMUser;
@class IMConversation;

SWIFT_CLASS("_TtC12IMMessageSDK36CreationConversationNotificationData")
@interface CreationConversationNotificationData : NSObject
- (nonnull instancetype)initWithUser:(IMUser * _Nonnull)user conversation:(IMConversation * _Nonnull)conversation OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class NSNumber;
enum IMCommandType : NSInteger;
@class NSString;

SWIFT_CLASS("_TtC12IMMessageSDK9IMCommand")
@interface IMCommand : RealmSwiftObject
@property (nonatomic) NSInteger id;
@property (nonatomic) enum IMCommandType commandType;
@property (nonatomic, copy) NSString * _Nullable content;
@property (nonatomic) NSInteger type;
+ (IMCommand * _Nonnull)createProjectCustomizedCommandWithContent:(NSString * _Null_unspecified)content SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, IMCommandType, closed) {
  IMCommandTypeUnknownCommand = 0,
  IMCommandTypeConversationCreation = 1,
  IMCommandTypeProjectCustomized = 2,
  IMCommandTypePrivateMessageAck = 3,
  IMCommandTypeUserOnlineStatus = 4,
};

enum IMConversationType : NSInteger;

SWIFT_CLASS("_TtC12IMMessageSDK14IMConversation")
@interface IMConversation : RealmSwiftObject
@property (nonatomic) NSInteger id;
@property (nonatomic) enum IMConversationType conversationType;
@property (nonatomic, copy) NSString * _Nullable conversationId;
@property (nonatomic, copy) NSString * _Nullable currentUid;
@property (nonatomic, copy) NSString * _Nullable targetUid;
@property (nonatomic) NSInteger type;
@property (nonatomic) int64_t lastReadAt;
@property (nonatomic, copy) NSString * _Nullable latestMessageId;
@property (nonatomic) NSInteger unread;
@property (nonatomic) int64_t createdAt;
@property (nonatomic) int64_t updatedAt;
@property (nonatomic) int64_t lastSyncAt;
@property (nonatomic, copy) NSString * _Nullable latestMessage;
+ (NSString * _Nullable)primaryKey SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)indexedProperties SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithPrivateConversation:(IMUser * _Null_unspecified)user recipientUid:(NSString * _Null_unspecified)recipientUid;
- (nonnull instancetype)initWithGroupConversation:(IMUser * _Null_unspecified)user conversationId:(NSString * _Null_unspecified)conversationId;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, IMConversationType, closed) {
  IMConversationTypeUnknownConversation = 0,
  IMConversationTypePrivateConversation = 1,
  IMConversationTypeGroupConversation = 2,
};

enum IMMessageType : NSInteger;

SWIFT_CLASS("_TtC12IMMessageSDK9IMMessage")
@interface IMMessage : RealmSwiftObject
@property (nonatomic) NSInteger id;
@property (nonatomic) enum IMMessageType messageType;
@property (nonatomic, copy) NSString * _Nullable messageId;
@property (nonatomic) NSInteger localConversationId;
@property (nonatomic, copy) NSString * _Nullable conversationId;
@property (nonatomic, copy) NSString * _Nullable senderUid;
@property (nonatomic, copy) NSString * _Nullable content;
@property (nonatomic, copy) NSString * _Nullable extras;
@property (nonatomic, copy) NSString * _Nullable currentUid;
@property (nonatomic) int64_t createdAt;
@property (nonatomic) NSInteger type;
@property (nonatomic) BOOL isLocal;
+ (NSString * _Nullable)primaryKey SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)indexedProperties SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)ignoredProperties SWIFT_WARN_UNUSED_RESULT;
+ (IMMessage * _Nonnull)createTextMessageWithContent:(NSString * _Null_unspecified)content extras:(NSString * _Nullable)extras SWIFT_WARN_UNUSED_RESULT;
+ (IMMessage * _Nonnull)createNotificationMessageWithContent:(NSString * _Nullable)content extras:(NSString * _Null_unspecified)extras SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, IMMessageType, closed) {
  IMMessageTypeUnknownMessage = 0,
  IMMessageTypeTextMessage = 1,
  IMMessageTypeNotificationMessage = 2,
  IMMessageTypeSystemMessage = 3,
};


SWIFT_CLASS("_TtC12IMMessageSDK10IMMessager")
@interface IMMessager : NSObject
@property (nonatomic, readonly) BOOL isLogin;
- (nonnull instancetype)initWithEndpoint:(NSString * _Nonnull)endpoint OBJC_DESIGNATED_INITIALIZER;
- (BOOL)loginWithUid:(NSString * _Nonnull)uid accessToken:(NSString * _Nonnull)accessToken autoSync:(BOOL)autoSync error:(NSError * _Nullable * _Nullable)error;
- (void)logout;
- (void)ensureConnected:(void (^ _Nullable)(void))callback;
- (void)getCurrentUserWithCallback:(void (^ _Nonnull)(IMUser * _Nullable, NSError * _Nullable))callback;
- (void)enableDebug;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@protocol InvalidRealmCallback;
@protocol InvalidAccessTokenCallback;
@protocol ReceivedCommandCallback;
@protocol ReceivedMessageCallback;
@protocol UpdatedConversationCallback;
@protocol MessageSyncCallback;
@protocol SocketStatusCallback;

@interface IMMessager (SWIFT_EXTENSION(IMMessageSDK))
- (void)registerInvalidRealmCallback:(id <InvalidRealmCallback> _Nonnull)callback;
- (void)unregisterInvalidRealmCallback:(id <InvalidRealmCallback> _Nonnull)callback;
- (void)registerInvalidAccessTokenCallback:(id <InvalidAccessTokenCallback> _Nonnull)callback;
- (void)unregisterInvalidAccessTokenCallback:(id <InvalidAccessTokenCallback> _Nonnull)callback;
- (void)registerCommandReceivedCallback:(id <ReceivedCommandCallback> _Nonnull)callback;
- (void)unregisterCommandReceivedCallback:(id <ReceivedCommandCallback> _Nonnull)callback;
- (void)registerMessageReceivedCallback:(id <ReceivedMessageCallback> _Nonnull)callback;
- (void)unregisterMessageReceivedCallback:(id <ReceivedMessageCallback> _Nonnull)callback;
- (void)registerConversationUpdatedCallback:(id <UpdatedConversationCallback> _Nonnull)callback;
- (void)unregisterConversationUpdatedCallback:(id <UpdatedConversationCallback> _Nonnull)callback;
- (void)registerMessageSyncedSuccessCallback:(id <MessageSyncCallback> _Nonnull)callback;
- (void)unregisterMessageSyncedSuccessCallback:(id <MessageSyncCallback> _Nonnull)callback;
- (void)registerSocketStatusCallback:(id <SocketStatusCallback> _Nonnull)callback;
- (void)unregisterSocketStatusCallback:(id <SocketStatusCallback> _Nonnull)callback;
@end


@interface IMMessager (SWIFT_EXTENSION(IMMessageSDK))
- (void)sendPrivateMessageWithRecipientUid:(NSString * _Nonnull)recipientUid body:(NSString * _Nonnull)body extras:(NSString * _Nullable)extras callback:(void (^ _Nonnull)(IMMessage * _Nullable, NSError * _Nullable))callback;
- (void)sendPrivateMessageWithRecipientUid:(NSString * _Nonnull)recipientUid message:(IMMessage * _Nonnull)message callback:(void (^ _Nonnull)(IMMessage * _Nullable, NSError * _Nullable))callback;
- (void)sendCommandMessageWithRecipientUid:(NSString * _Nonnull)recipientUid body:(NSString * _Nonnull)body callback:(void (^ _Nonnull)(IMCommand * _Nullable, NSError * _Nullable))callback;
- (void)sendCommandMessageWithRecipientUids:(NSArray<NSString *> * _Nonnull)recipientUids body:(NSString * _Nonnull)body callback:(void (^ _Nonnull)(IMCommand * _Nullable, NSError * _Nullable))callback;
- (void)fetchMessagesWithConversationId:(NSString * _Nonnull)conversationId from:(int64_t)end limit:(NSInteger)count callback:(void (^ _Nonnull)(NSArray<IMMessage *> * _Nonnull, NSError * _Nullable))callback;
/// 通过 local conversation id 从服务器 获取IMMessage
/// \param localConversationId local id
///
/// \param end 从当前时间向更早的时间获取
///
/// \param count 获取的数量
///
/// \param callback IMMessage and error
///
- (void)fetchMessagesWithLocalConversationId:(NSInteger)localConversationId from:(int64_t)end limit:(NSInteger)count callback:(void (^ _Nonnull)(NSArray<IMMessage *> * _Nonnull, NSError * _Nullable))callback;
/// 通过IMConversation 从服务器获取 IMMessage
/// \param conversation IMConversation
///
/// \param end 从当前时间向更早的时间获取
///
/// \param count 获取的数量
///
/// \param callback IMMessage and error
///
- (void)fetchMessagesWithConversation:(IMConversation * _Nonnull)conversation from:(int64_t)end limit:(NSInteger)count callback:(void (^ _Nonnull)(NSArray<IMMessage *> * _Nonnull, NSError * _Nullable))callback;
- (void)getMessagesWithConversationId:(NSString * _Nonnull)conversationId from:(int64_t)from count:(NSInteger)count fill:(BOOL)fill callback:(void (^ _Nonnull)(NSArray<IMMessage *> * _Nonnull, NSError * _Nullable))callback;
/// 通过local conversation id 获取对应IMConversation的IMMessages
/// \param localConversationId localConversationId
///
/// \param from 
///
/// \param count 从当前时间向更早的时间获取
///
/// \param fill //
///
/// \param callback IMMessages and error
///
- (void)getMessagesWithLocalConversationId:(NSInteger)localConversationId from:(int64_t)from count:(NSInteger)count fill:(BOOL)fill callback:(void (^ _Nonnull)(NSArray<IMMessage *> * _Nonnull, NSError * _Nullable))callback;
- (BOOL)getMessageWithMessageId:(NSString * _Nonnull)messageId error:(NSError * _Nullable * _Nullable)error callback:(void (^ _Nonnull)(IMMessage * _Nullable, NSError * _Nullable))callback;
- (void)getMessagesWithMessageIds:(NSArray<NSString *> * _Nonnull)messageIds callback:(void (^ _Nonnull)(NSDictionary<NSString *, IMMessage *> * _Nonnull, NSError * _Nullable))callback;
- (void)getLatestMessageWithLocalConversationId:(NSInteger)localConversationId callback:(void (^ _Nonnull)(IMMessage * _Nullable, NSError * _Nullable))callback;
- (void)getLatestMessagesWithLocalConversationIds:(NSArray<NSNumber *> * _Nonnull)localConversationIds callback:(void (^ _Nonnull)(NSArray<IMMessage *> * _Nonnull, NSError * _Nullable))callback;
- (void)getLatestMessageWithConversationId:(NSString * _Nonnull)conversationId callback:(void (^ _Nonnull)(IMMessage * _Nullable, NSError * _Nullable))callback;
- (void)getLatestMessagesWithConversationIds:(NSArray<NSString *> * _Nonnull)conversationIds callback:(void (^ _Nonnull)(NSArray<IMMessage *> * _Nonnull, NSError * _Nullable))callback;
- (void)fetchConversationIfunavailableWithConversationIds:(NSArray<NSString *> * _Nonnull)conversationIds callback:(void (^ _Nonnull)(NSArray<IMConversation *> * _Nonnull, NSError * _Nullable))callback;
- (void)getConversationWithLocalConversationId:(NSInteger)localConversationId callback:(void (^ _Nonnull)(IMConversation * _Nullable, NSError * _Nullable))callback;
- (void)getConversationsWithLocalConversationIds:(NSArray<NSNumber *> * _Nonnull)localConversationIds callback:(void (^ _Nonnull)(NSArray<IMConversation *> * _Nonnull, NSError * _Nullable))callback;
- (void)getPrivateConversationWithTargetUid:(NSString * _Nonnull)targetUid callback:(void (^ _Nonnull)(IMConversation * _Nullable, NSError * _Nullable))callback;
- (void)getPrivateConversationsWithTargetUids:(NSArray<NSString *> * _Nonnull)targetUids callback:(void (^ _Nonnull)(NSDictionary<NSString *, IMConversation *> * _Nonnull, NSError * _Nullable))callback;
- (void)getConversationWithConversationId:(NSString * _Nonnull)conversationId callback:(void (^ _Nonnull)(IMConversation * _Nullable, NSError * _Nullable))callback;
- (void)getConversationsWithConversationIds:(NSArray<NSString *> * _Nonnull)conversationIds callback:(void (^ _Nonnull)(NSDictionary<NSString *, IMConversation *> * _Nonnull, NSError * _Nullable))callback;
- (void)getConversationsFrom:(int64_t)from count:(NSInteger)count callback:(void (^ _Nonnull)(NSArray<IMConversation *> * _Nonnull, NSError * _Nullable))callback;
- (void)getTotalUnreadCountWithCallback:(void (^ _Nonnull)(NSInteger, NSError * _Nullable))callback;
- (void)clearConversationUnreadsWithLocalConversationId:(NSInteger)localConversationId callback:(void (^ _Nullable)(BOOL))callback;
- (void)subscribeOnlineWith:(NSArray<NSString *> * _Nullable)userIds callback:(void (^ _Nullable)(BOOL, NSString * _Nullable))callback;
- (void)unsubscribeOnlineWith:(NSArray<NSString *> * _Nullable)userIds callback:(void (^ _Nullable)(BOOL, NSString * _Nullable))callback;
@end

typedef SWIFT_ENUM(NSInteger, IMPendingMessageType, closed) {
  IMPendingMessageTypeUnknownMessage = 0,
  IMPendingMessageTypePrivateMessage = 1,
  IMPendingMessageTypeCommandMessage = 2,
  IMPendingMessageTypeGroupMessage = 3,
};


SWIFT_CLASS("_TtC12IMMessageSDK6IMUser")
@interface IMUser : RealmSwiftObject
@property (nonatomic) NSInteger id;
@property (nonatomic, copy) NSString * _Nullable uid;
@property (nonatomic, copy) NSString * _Nullable accessToken;
@property (nonatomic) int64_t lastSyncAt;
+ (NSString * _Nullable)primaryKey SWIFT_WARN_UNUSED_RESULT;
+ (NSArray<NSString *> * _Nonnull)indexedProperties SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) NSUInteger hash;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_PROTOCOL("_TtP12IMMessageSDK26InvalidAccessTokenCallback_")
@protocol InvalidAccessTokenCallback
- (void)onInvalidAccessToken;
@end


SWIFT_CLASS("_TtC12IMMessageSDK34InvalidAccessTokenNotificationData")
@interface InvalidAccessTokenNotificationData : NSObject
- (nonnull instancetype)initWithToken:(NSString * _Nonnull)token OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP12IMMessageSDK20InvalidRealmCallback_")
@protocol InvalidRealmCallback
- (void)onInvalidRealm:(NSError * _Nonnull)error;
@end


SWIFT_PROTOCOL("_TtP12IMMessageSDK19MessageSyncCallback_")
@protocol MessageSyncCallback
- (void)onSyncSuccess:(int64_t)lastSyncAt;
@end


@interface RealmSwiftObject (SWIFT_EXTENSION(IMMessageSDK))
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSString *> * _Nonnull detachableProperties;)
+ (NSArray<NSString *> * _Nonnull)detachableProperties SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSArray<NSString *> * _Nonnull undetachableProperties;)
+ (NSArray<NSString *> * _Nonnull)undetachableProperties SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_PROTOCOL("_TtP12IMMessageSDK23ReceivedCommandCallback_")
@protocol ReceivedCommandCallback
- (void)onReceived:(IMCommand * _Nonnull)command;
@end


SWIFT_CLASS("_TtC12IMMessageSDK31ReceivedCommandNotificationData")
@interface ReceivedCommandNotificationData : NSObject
- (nonnull instancetype)initWithCommand:(IMCommand * _Nonnull)command OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP12IMMessageSDK23ReceivedMessageCallback_")
@protocol ReceivedMessageCallback
- (void)onReceived:(NSInteger)localConversationId :(NSArray<IMMessage *> * _Nonnull)messages;
@end


SWIFT_CLASS("_TtC12IMMessageSDK31ReceivedMessageNotificationData")
@interface ReceivedMessageNotificationData : NSObject
- (nonnull instancetype)initWithLocalConversationId:(NSInteger)localConversationId messages:(NSArray<IMMessage *> * _Nonnull)messages OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_PROTOCOL("_TtP12IMMessageSDK20SocketStatusCallback_")
@protocol SocketStatusCallback
- (void)onAvailable;
- (void)onUnAvailable;
- (void)onOpened;
- (void)onClosed;
@end


SWIFT_PROTOCOL("_TtP12IMMessageSDK27UpdatedConversationCallback_")
@protocol UpdatedConversationCallback
- (void)onUpdated:(NSArray<IMConversation *> * _Nonnull)conversations;
@end


SWIFT_CLASS("_TtC12IMMessageSDK35UpdatedConversationNotificationData")
@interface UpdatedConversationNotificationData : NSObject
- (nonnull instancetype)initWithConversations:(NSArray<IMConversation *> * _Nonnull)conversations OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif

#endif
